# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services    In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.7.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from dhl_express_client.api_client import ApiClient


class TrackingApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def exp_api_shipments_tracking(self, shipment_tracking_number, **kwargs):  # noqa: E501
        """Track a single DHL Express Shipment  # noqa: E501

        The Tracking service retrieves tracking statuses for a single DHL Express Shipment   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.exp_api_shipments_tracking(shipment_tracking_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str shipment_tracking_number: DHL Express shipment identification number (required)
        :param str tracking_view:
        :param str level_of_detail:
        :param str message_reference: Please provide message reference 
        :param str message_reference_date: Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
        :param str accept_language:
        :param str plugin_name: Please provide name of the plugin (applicable to 3PV only) 
        :param str plugin_version: Please provide version of the plugin (applicable to 3PV only) 
        :param str shipping_system_platform_name: Please provide name of the shipping platform(applicable to 3PV only) 
        :param str shipping_system_platform_version: Please provide version of the shipping platform (applicable to 3PV only) 
        :param str webstore_platform_name: Please provide name of the webstore platform (applicable to 3PV only) 
        :param str webstore_platform_version: Please provide version of the webstore platform (applicable to 3PV only) 
        :return: SupermodelIoLogisticsExpressTrackingResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.exp_api_shipments_tracking_with_http_info(shipment_tracking_number, **kwargs)  # noqa: E501
        else:
            (data) = self.exp_api_shipments_tracking_with_http_info(shipment_tracking_number, **kwargs)  # noqa: E501
            return data

    def exp_api_shipments_tracking_with_http_info(self, shipment_tracking_number, **kwargs):  # noqa: E501
        """Track a single DHL Express Shipment  # noqa: E501

        The Tracking service retrieves tracking statuses for a single DHL Express Shipment   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.exp_api_shipments_tracking_with_http_info(shipment_tracking_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str shipment_tracking_number: DHL Express shipment identification number (required)
        :param str tracking_view:
        :param str level_of_detail:
        :param str message_reference: Please provide message reference 
        :param str message_reference_date: Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
        :param str accept_language:
        :param str plugin_name: Please provide name of the plugin (applicable to 3PV only) 
        :param str plugin_version: Please provide version of the plugin (applicable to 3PV only) 
        :param str shipping_system_platform_name: Please provide name of the shipping platform(applicable to 3PV only) 
        :param str shipping_system_platform_version: Please provide version of the shipping platform (applicable to 3PV only) 
        :param str webstore_platform_name: Please provide name of the webstore platform (applicable to 3PV only) 
        :param str webstore_platform_version: Please provide version of the webstore platform (applicable to 3PV only) 
        :return: SupermodelIoLogisticsExpressTrackingResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['shipment_tracking_number', 'tracking_view', 'level_of_detail', 'message_reference', 'message_reference_date', 'accept_language', 'plugin_name', 'plugin_version', 'shipping_system_platform_name', 'shipping_system_platform_version', 'webstore_platform_name', 'webstore_platform_version']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method exp_api_shipments_tracking" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'shipment_tracking_number' is set
        if ('shipment_tracking_number' not in params or
                params['shipment_tracking_number'] is None):
            raise ValueError("Missing the required parameter `shipment_tracking_number` when calling `exp_api_shipments_tracking`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'shipment_tracking_number' in params:
            path_params['shipmentTrackingNumber'] = params['shipment_tracking_number']  # noqa: E501

        query_params = []
        if 'tracking_view' in params:
            query_params.append(('trackingView', params['tracking_view']))  # noqa: E501
        if 'level_of_detail' in params:
            query_params.append(('levelOfDetail', params['level_of_detail']))  # noqa: E501

        header_params = {}
        if 'message_reference' in params:
            header_params['Message-Reference'] = params['message_reference']  # noqa: E501
        if 'message_reference_date' in params:
            header_params['Message-Reference-Date'] = params['message_reference_date']  # noqa: E501
        if 'accept_language' in params:
            header_params['Accept-Language'] = params['accept_language']  # noqa: E501
        if 'plugin_name' in params:
            header_params['Plugin-Name'] = params['plugin_name']  # noqa: E501
        if 'plugin_version' in params:
            header_params['Plugin-Version'] = params['plugin_version']  # noqa: E501
        if 'shipping_system_platform_name' in params:
            header_params['Shipping-System-Platform-Name'] = params['shipping_system_platform_name']  # noqa: E501
        if 'shipping_system_platform_version' in params:
            header_params['Shipping-System-Platform-Version'] = params['shipping_system_platform_version']  # noqa: E501
        if 'webstore_platform_name' in params:
            header_params['Webstore-Platform-Name'] = params['webstore_platform_name']  # noqa: E501
        if 'webstore_platform_version' in params:
            header_params['Webstore-Platform-Version'] = params['webstore_platform_version']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['basicAuth']  # noqa: E501

        return self.api_client.call_api(
            '/shipments/{shipmentTrackingNumber}/tracking', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='SupermodelIoLogisticsExpressTrackingResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def exp_api_shipments_tracking_multi(self, **kwargs):  # noqa: E501
        """Track a single or multiple DHL Express Shipments  # noqa: E501

        The Tracking service retrieves tracking statuses for a single or multiple DHL Express Shipments   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.exp_api_shipments_tracking_multi(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param list[str] shipment_tracking_number: DHL Express shipment identification number
        :param list[str] piece_tracking_number: DHL Express shipment piece tracking number
        :param str shipment_reference: Shipment reference which was provided during the shipment label creation 
        :param str shipment_reference_type: Shipment reference type which was provided during the shipment label creation 
        :param str shipper_account_number: Shipper DHL Express Account number under which the shipment label was created 
        :param str date_range_from: When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the start of the period. 
        :param str date_range_to: When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the end of the period. 
        :param str tracking_view:
        :param str level_of_detail:
        :param str message_reference: Please provide message reference 
        :param str message_reference_date: Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
        :param str accept_language:
        :param str plugin_name: Please provide name of the plugin (applicable to 3PV only) 
        :param str plugin_version: Please provide version of the plugin (applicable to 3PV only) 
        :param str shipping_system_platform_name: Please provide name of the shipping platform(applicable to 3PV only) 
        :param str shipping_system_platform_version: Please provide version of the shipping platform (applicable to 3PV only) 
        :param str webstore_platform_name: Please provide name of the webstore platform (applicable to 3PV only) 
        :param str webstore_platform_version: Please provide version of the webstore platform (applicable to 3PV only) 
        :return: SupermodelIoLogisticsExpressTrackingResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.exp_api_shipments_tracking_multi_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.exp_api_shipments_tracking_multi_with_http_info(**kwargs)  # noqa: E501
            return data

    def exp_api_shipments_tracking_multi_with_http_info(self, **kwargs):  # noqa: E501
        """Track a single or multiple DHL Express Shipments  # noqa: E501

        The Tracking service retrieves tracking statuses for a single or multiple DHL Express Shipments   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.exp_api_shipments_tracking_multi_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param list[str] shipment_tracking_number: DHL Express shipment identification number
        :param list[str] piece_tracking_number: DHL Express shipment piece tracking number
        :param str shipment_reference: Shipment reference which was provided during the shipment label creation 
        :param str shipment_reference_type: Shipment reference type which was provided during the shipment label creation 
        :param str shipper_account_number: Shipper DHL Express Account number under which the shipment label was created 
        :param str date_range_from: When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the start of the period. 
        :param str date_range_to: When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the end of the period. 
        :param str tracking_view:
        :param str level_of_detail:
        :param str message_reference: Please provide message reference 
        :param str message_reference_date: Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
        :param str accept_language:
        :param str plugin_name: Please provide name of the plugin (applicable to 3PV only) 
        :param str plugin_version: Please provide version of the plugin (applicable to 3PV only) 
        :param str shipping_system_platform_name: Please provide name of the shipping platform(applicable to 3PV only) 
        :param str shipping_system_platform_version: Please provide version of the shipping platform (applicable to 3PV only) 
        :param str webstore_platform_name: Please provide name of the webstore platform (applicable to 3PV only) 
        :param str webstore_platform_version: Please provide version of the webstore platform (applicable to 3PV only) 
        :return: SupermodelIoLogisticsExpressTrackingResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['shipment_tracking_number', 'piece_tracking_number', 'shipment_reference', 'shipment_reference_type', 'shipper_account_number', 'date_range_from', 'date_range_to', 'tracking_view', 'level_of_detail', 'message_reference', 'message_reference_date', 'accept_language', 'plugin_name', 'plugin_version', 'shipping_system_platform_name', 'shipping_system_platform_version', 'webstore_platform_name', 'webstore_platform_version']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method exp_api_shipments_tracking_multi" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'shipment_tracking_number' in params:
            query_params.append(('shipmentTrackingNumber', params['shipment_tracking_number']))  # noqa: E501
            collection_formats['shipmentTrackingNumber'] = 'multi'  # noqa: E501
        if 'piece_tracking_number' in params:
            query_params.append(('pieceTrackingNumber', params['piece_tracking_number']))  # noqa: E501
            collection_formats['pieceTrackingNumber'] = 'multi'  # noqa: E501
        if 'shipment_reference' in params:
            query_params.append(('shipmentReference', params['shipment_reference']))  # noqa: E501
        if 'shipment_reference_type' in params:
            query_params.append(('shipmentReferenceType', params['shipment_reference_type']))  # noqa: E501
        if 'shipper_account_number' in params:
            query_params.append(('shipperAccountNumber', params['shipper_account_number']))  # noqa: E501
        if 'date_range_from' in params:
            query_params.append(('dateRangeFrom', params['date_range_from']))  # noqa: E501
        if 'date_range_to' in params:
            query_params.append(('dateRangeTo', params['date_range_to']))  # noqa: E501
        if 'tracking_view' in params:
            query_params.append(('trackingView', params['tracking_view']))  # noqa: E501
        if 'level_of_detail' in params:
            query_params.append(('levelOfDetail', params['level_of_detail']))  # noqa: E501

        header_params = {}
        if 'message_reference' in params:
            header_params['Message-Reference'] = params['message_reference']  # noqa: E501
        if 'message_reference_date' in params:
            header_params['Message-Reference-Date'] = params['message_reference_date']  # noqa: E501
        if 'accept_language' in params:
            header_params['Accept-Language'] = params['accept_language']  # noqa: E501
        if 'plugin_name' in params:
            header_params['Plugin-Name'] = params['plugin_name']  # noqa: E501
        if 'plugin_version' in params:
            header_params['Plugin-Version'] = params['plugin_version']  # noqa: E501
        if 'shipping_system_platform_name' in params:
            header_params['Shipping-System-Platform-Name'] = params['shipping_system_platform_name']  # noqa: E501
        if 'shipping_system_platform_version' in params:
            header_params['Shipping-System-Platform-Version'] = params['shipping_system_platform_version']  # noqa: E501
        if 'webstore_platform_name' in params:
            header_params['Webstore-Platform-Name'] = params['webstore_platform_name']  # noqa: E501
        if 'webstore_platform_version' in params:
            header_params['Webstore-Platform-Version'] = params['webstore_platform_version']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['basicAuth']  # noqa: E501

        return self.api_client.call_api(
            '/tracking', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='SupermodelIoLogisticsExpressTrackingResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
