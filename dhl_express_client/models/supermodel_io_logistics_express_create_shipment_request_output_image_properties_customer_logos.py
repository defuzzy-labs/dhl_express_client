# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services    In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.7.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'file_format': 'str',
        'content': 'str'
    }

    attribute_map = {
        'file_format': 'fileFormat',
        'content': 'content'
    }

    def __init__(self, file_format=None, content=None):  # noqa: E501
        """SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos - a model defined in Swagger"""  # noqa: E501
        self._file_format = None
        self._content = None
        self.discriminator = None
        self.file_format = file_format
        self.content = content

    @property
    def file_format(self):
        """Gets the file_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.  # noqa: E501

        Please specify image file format  # noqa: E501

        :return: The file_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.  # noqa: E501
        :rtype: str
        """
        return self._file_format

    @file_format.setter
    def file_format(self, file_format):
        """Sets the file_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.

        Please specify image file format  # noqa: E501

        :param file_format: The file_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.  # noqa: E501
        :type: str
        """
        if file_format is None:
            raise ValueError("Invalid value for `file_format`, must not be `None`")  # noqa: E501
        allowed_values = ["PNG", "GIF", "JPEG", "JPG"]  # noqa: E501
        if file_format not in allowed_values:
            raise ValueError(
                "Invalid value for `file_format` ({0}), must be one of {1}"  # noqa: E501
                .format(file_format, allowed_values)
            )

        self._file_format = file_format

    @property
    def content(self):
        """Gets the content of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.  # noqa: E501

        Please provide base64 encoded logo image  # noqa: E501

        :return: The content of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.  # noqa: E501
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.

        Please provide base64 encoded logo image  # noqa: E501

        :param content: The content of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos.  # noqa: E501
        :type: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesCustomerLogos):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
