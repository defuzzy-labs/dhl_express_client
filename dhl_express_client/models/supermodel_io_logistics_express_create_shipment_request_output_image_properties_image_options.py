# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services    In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.7.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type_code': 'str',
        'template_name': 'str',
        'is_requested': 'bool',
        'hide_account_number': 'bool',
        'number_of_copies': 'float',
        'invoice_type': 'str',
        'language_code': 'str',
        'language_country_code': 'str',
        'encoding_format': 'str',
        'render_dhl_logo': 'bool',
        'fit_labels_to_a4': 'bool',
        'label_free_text': 'str',
        'label_customer_data_text': 'str'
    }

    attribute_map = {
        'type_code': 'typeCode',
        'template_name': 'templateName',
        'is_requested': 'isRequested',
        'hide_account_number': 'hideAccountNumber',
        'number_of_copies': 'numberOfCopies',
        'invoice_type': 'invoiceType',
        'language_code': 'languageCode',
        'language_country_code': 'languageCountryCode',
        'encoding_format': 'encodingFormat',
        'render_dhl_logo': 'renderDHLLogo',
        'fit_labels_to_a4': 'fitLabelsToA4',
        'label_free_text': 'labelFreeText',
        'label_customer_data_text': 'labelCustomerDataText'
    }

    def __init__(self, type_code=None, template_name=None, is_requested=None, hide_account_number=None, number_of_copies=None, invoice_type=None, language_code=None, language_country_code=None, encoding_format=None, render_dhl_logo=None, fit_labels_to_a4=None, label_free_text=None, label_customer_data_text=None):  # noqa: E501
        """SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions - a model defined in Swagger"""  # noqa: E501
        self._type_code = None
        self._template_name = None
        self._is_requested = None
        self._hide_account_number = None
        self._number_of_copies = None
        self._invoice_type = None
        self._language_code = None
        self._language_country_code = None
        self._encoding_format = None
        self._render_dhl_logo = None
        self._fit_labels_to_a4 = None
        self._label_free_text = None
        self._label_customer_data_text = None
        self.discriminator = None
        self.type_code = type_code
        if template_name is not None:
            self.template_name = template_name
        if is_requested is not None:
            self.is_requested = is_requested
        if hide_account_number is not None:
            self.hide_account_number = hide_account_number
        if number_of_copies is not None:
            self.number_of_copies = number_of_copies
        if invoice_type is not None:
            self.invoice_type = invoice_type
        if language_code is not None:
            self.language_code = language_code
        if language_country_code is not None:
            self.language_country_code = language_country_code
        if encoding_format is not None:
            self.encoding_format = encoding_format
        if render_dhl_logo is not None:
            self.render_dhl_logo = render_dhl_logo
        if fit_labels_to_a4 is not None:
            self.fit_labels_to_a4 = fit_labels_to_a4
        if label_free_text is not None:
            self.label_free_text = label_free_text
        if label_customer_data_text is not None:
            self.label_customer_data_text = label_customer_data_text

    @property
    def type_code(self):
        """Gets the type_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Please enter the document type you want to wish set properties for  # noqa: E501

        :return: The type_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Please enter the document type you want to wish set properties for  # noqa: E501

        :param type_code: The type_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """
        if type_code is None:
            raise ValueError("Invalid value for `type_code`, must not be `None`")  # noqa: E501
        allowed_values = ["label", "waybillDoc", "invoice", "receipt", "qr-code"]  # noqa: E501
        if type_code not in allowed_values:
            raise ValueError(
                "Invalid value for `type_code` ({0}), must be one of {1}"  # noqa: E501
                .format(type_code, allowed_values)
            )

        self._type_code = type_code

    @property
    def template_name(self):
        """Gets the template_name of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Please enter DHL Express document template name. <BR>                Sample Transport label templates:<BR>                ECOM26_84_A4_001 <BR>                ECOM26_84_001 - default<BR>                ECOM_TC_A4<BR>                ECOM26_A6_002<BR>                ECOM26_84CI_001<BR>                ECOM26_84CI_002 - supported single customer barcode<BR>                ECOM26_84CI_003 - to be used if customer barcodes are used<BR>                ECOM_A4_RU_002<BR>                <BR>                Sample WaybillDoc templates<BR>                ARCH_8X4_A4_002<BR>                ARCH_8X4 - default<BR>                ARCH_6X4<BR>                ARCH_A4_RU_002<BR>                <BR>                Sample Commercial invoice templates:<BR>                COMMERCIAL_INVOICE_04 - This template can print the Shipper, Recipient, and Buyer and Importer address details and is on portrait orientation, exclusive use for preparing Loose BBX shipment.<BR>                COMMERCIAL_INVOICE_P_10 - (default) This template can print the Shipper, Recipient and upto two more additional address details in portrait orientation. Note: If customer provided more than four address roles in the request message and this template is selected, the rendered invoice will only contain four address roles based on order of priority: Shipper, Recipient, Seller, Importer, Exporter, Buyer. <BR>                COMMERCIAL_INVOICE_L_10 - This template can print the Shipper,Recipient, Buyer, and Importer and Exporter address details and is on landscape orientation..<BR>                RET_COM_INVOICE_A4_01 - This template can print the Shipper, Recipient and Importer of record address details and is on landscape orientation. This template is for exclusive use for certain shipment where the goods are actual 'returns'. The Shipper is the party that earlier has received the goods, but now wishes to return the goods to its originating party. The Recipient in this shipment scenario will receive the 'returned goods'. Therefore such request of shipment with an invoice rendering may utilize the specific invoice template for 'Returns Invoice'.<BR>                <BR>                Sample Shipment Receipt template<BR>                SHIP_RECPT_A4_RU_002 - default<BR>                Sample QR Code template template<BR>                <BR>                QR_1_00_LL_PNG_001 - default  # noqa: E501

        :return: The template_name of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Please enter DHL Express document template name. <BR>                Sample Transport label templates:<BR>                ECOM26_84_A4_001 <BR>                ECOM26_84_001 - default<BR>                ECOM_TC_A4<BR>                ECOM26_A6_002<BR>                ECOM26_84CI_001<BR>                ECOM26_84CI_002 - supported single customer barcode<BR>                ECOM26_84CI_003 - to be used if customer barcodes are used<BR>                ECOM_A4_RU_002<BR>                <BR>                Sample WaybillDoc templates<BR>                ARCH_8X4_A4_002<BR>                ARCH_8X4 - default<BR>                ARCH_6X4<BR>                ARCH_A4_RU_002<BR>                <BR>                Sample Commercial invoice templates:<BR>                COMMERCIAL_INVOICE_04 - This template can print the Shipper, Recipient, and Buyer and Importer address details and is on portrait orientation, exclusive use for preparing Loose BBX shipment.<BR>                COMMERCIAL_INVOICE_P_10 - (default) This template can print the Shipper, Recipient and upto two more additional address details in portrait orientation. Note: If customer provided more than four address roles in the request message and this template is selected, the rendered invoice will only contain four address roles based on order of priority: Shipper, Recipient, Seller, Importer, Exporter, Buyer. <BR>                COMMERCIAL_INVOICE_L_10 - This template can print the Shipper,Recipient, Buyer, and Importer and Exporter address details and is on landscape orientation..<BR>                RET_COM_INVOICE_A4_01 - This template can print the Shipper, Recipient and Importer of record address details and is on landscape orientation. This template is for exclusive use for certain shipment where the goods are actual 'returns'. The Shipper is the party that earlier has received the goods, but now wishes to return the goods to its originating party. The Recipient in this shipment scenario will receive the 'returned goods'. Therefore such request of shipment with an invoice rendering may utilize the specific invoice template for 'Returns Invoice'.<BR>                <BR>                Sample Shipment Receipt template<BR>                SHIP_RECPT_A4_RU_002 - default<BR>                Sample QR Code template template<BR>                <BR>                QR_1_00_LL_PNG_001 - default  # noqa: E501

        :param template_name: The template_name of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """

        self._template_name = template_name

    @property
    def is_requested(self):
        """Gets the is_requested of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        To be used for waybillDoc, invoice, receipt and QRcode. If set to true then the document is provided otherwise not  # noqa: E501

        :return: The is_requested of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: bool
        """
        return self._is_requested

    @is_requested.setter
    def is_requested(self, is_requested):
        """Sets the is_requested of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        To be used for waybillDoc, invoice, receipt and QRcode. If set to true then the document is provided otherwise not  # noqa: E501

        :param is_requested: The is_requested of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: bool
        """

        self._is_requested = is_requested

    @property
    def hide_account_number(self):
        """Gets the hide_account_number of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        To be used for waybillDoc. If set to true then account information will not be printed on the waybillDoc  # noqa: E501

        :return: The hide_account_number of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: bool
        """
        return self._hide_account_number

    @hide_account_number.setter
    def hide_account_number(self, hide_account_number):
        """Sets the hide_account_number of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        To be used for waybillDoc. If set to true then account information will not be printed on the waybillDoc  # noqa: E501

        :param hide_account_number: The hide_account_number of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: bool
        """

        self._hide_account_number = hide_account_number

    @property
    def number_of_copies(self):
        """Gets the number_of_copies of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        You can ask up to 2 waybillDoc copies to be provided  # noqa: E501

        :return: The number_of_copies of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: float
        """
        return self._number_of_copies

    @number_of_copies.setter
    def number_of_copies(self, number_of_copies):
        """Sets the number_of_copies of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        You can ask up to 2 waybillDoc copies to be provided  # noqa: E501

        :param number_of_copies: The number_of_copies of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: float
        """

        self._number_of_copies = number_of_copies

    @property
    def invoice_type(self):
        """Gets the invoice_type of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Please advise what type of customs documentation is required  # noqa: E501

        :return: The invoice_type of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._invoice_type

    @invoice_type.setter
    def invoice_type(self, invoice_type):
        """Sets the invoice_type of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Please advise what type of customs documentation is required  # noqa: E501

        :param invoice_type: The invoice_type of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """
        allowed_values = ["commercial", "proforma", "returns"]  # noqa: E501
        if invoice_type not in allowed_values:
            raise ValueError(
                "Invalid value for `invoice_type` ({0}), must be one of {1}"  # noqa: E501
                .format(invoice_type, allowed_values)
            )

        self._invoice_type = invoice_type

    @property
    def language_code(self):
        """Gets the language_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Please enter ISO 3 letters language code for invoice  # noqa: E501

        :return: The language_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Please enter ISO 3 letters language code for invoice  # noqa: E501

        :param language_code: The language_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """

        self._language_code = language_code

    @property
    def language_country_code(self):
        """Gets the language_country_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Please enter ISO 2 letters language country code for invoice  # noqa: E501

        :return: The language_country_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._language_country_code

    @language_country_code.setter
    def language_country_code(self, language_country_code):
        """Sets the language_country_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Please enter ISO 2 letters language country code for invoice  # noqa: E501

        :param language_country_code: The language_country_code of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """

        self._language_country_code = language_country_code

    @property
    def encoding_format(self):
        """Gets the encoding_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Please provide the format of the QR Code output format.  # noqa: E501

        :return: The encoding_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._encoding_format

    @encoding_format.setter
    def encoding_format(self, encoding_format):
        """Sets the encoding_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Please provide the format of the QR Code output format.  # noqa: E501

        :param encoding_format: The encoding_format of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """
        allowed_values = ["png"]  # noqa: E501
        if encoding_format not in allowed_values:
            raise ValueError(
                "Invalid value for `encoding_format` ({0}), must be one of {1}"  # noqa: E501
                .format(encoding_format, allowed_values)
            )

        self._encoding_format = encoding_format

    @property
    def render_dhl_logo(self):
        """Gets the render_dhl_logo of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        DHL Logo to be printed in Transport Label or Waybill Document  # noqa: E501

        :return: The render_dhl_logo of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: bool
        """
        return self._render_dhl_logo

    @render_dhl_logo.setter
    def render_dhl_logo(self, render_dhl_logo):
        """Sets the render_dhl_logo of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        DHL Logo to be printed in Transport Label or Waybill Document  # noqa: E501

        :param render_dhl_logo: The render_dhl_logo of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: bool
        """

        self._render_dhl_logo = render_dhl_logo

    @property
    def fit_labels_to_a4(self):
        """Gets the fit_labels_to_a4 of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        To print respective Transport Label and Waybill document into A4 margin PDF.<BR>                Note: ECOM26_A6_002,ECOM26_84CI_001,ECOM26_84CI_002,ARCH_6X4,ARCH_8X4 template. <BR>                This option is applicable only for PDF encodingFormat selection.<BR>                false: Transport Label and Waybill document will use default margin settings (default behavior) <BR>                true: Transport Label and Waybill document will print into A4 margin PDF  # noqa: E501

        :return: The fit_labels_to_a4 of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: bool
        """
        return self._fit_labels_to_a4

    @fit_labels_to_a4.setter
    def fit_labels_to_a4(self, fit_labels_to_a4):
        """Sets the fit_labels_to_a4 of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        To print respective Transport Label and Waybill document into A4 margin PDF.<BR>                Note: ECOM26_A6_002,ECOM26_84CI_001,ECOM26_84CI_002,ARCH_6X4,ARCH_8X4 template. <BR>                This option is applicable only for PDF encodingFormat selection.<BR>                false: Transport Label and Waybill document will use default margin settings (default behavior) <BR>                true: Transport Label and Waybill document will print into A4 margin PDF  # noqa: E501

        :param fit_labels_to_a4: The fit_labels_to_a4 of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: bool
        """

        self._fit_labels_to_a4 = fit_labels_to_a4

    @property
    def label_free_text(self):
        """Gets the label_free_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Additional customer label free text that can be printed in certain label.Note: Applicable only to ECOM26_A6_002, ECOM_TC_A4 and ECOM26_84CI_001.  # noqa: E501

        :return: The label_free_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._label_free_text

    @label_free_text.setter
    def label_free_text(self, label_free_text):
        """Sets the label_free_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Additional customer label free text that can be printed in certain label.Note: Applicable only to ECOM26_A6_002, ECOM_TC_A4 and ECOM26_84CI_001.  # noqa: E501

        :param label_free_text: The label_free_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """

        self._label_free_text = label_free_text

    @property
    def label_customer_data_text(self):
        """Gets the label_customer_data_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501

        Additional customer label text that can be printed in certain label.Note: Applicable only to ECOM26_84_A4_001, ECOM_TC_A4 and ECOM26_84CI_001  # noqa: E501

        :return: The label_customer_data_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :rtype: str
        """
        return self._label_customer_data_text

    @label_customer_data_text.setter
    def label_customer_data_text(self, label_customer_data_text):
        """Sets the label_customer_data_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.

        Additional customer label text that can be printed in certain label.Note: Applicable only to ECOM26_84_A4_001, ECOM_TC_A4 and ECOM26_84CI_001  # noqa: E501

        :param label_customer_data_text: The label_customer_data_text of this SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions.  # noqa: E501
        :type: str
        """

        self._label_customer_data_text = label_customer_data_text

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressCreateShipmentRequestOutputImagePropertiesImageOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
