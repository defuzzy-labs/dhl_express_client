# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressPackage(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type_code': 'str',
        'weight': 'float',
        'dimensions': 'Dimensions',
        'customer_references': 'list[SupermodelIoLogisticsExpressPackageReference]',
        'identifiers': 'list[SupermodelIoLogisticsExpressIdentifier]',
        'description': 'str',
        'label_barcodes': 'list[SupermodelIoLogisticsExpressPackageLabelBarcodes]',
        'label_text': 'list[SupermodelIoLogisticsExpressPackageLabelText]',
        'label_description': 'str',
        'reference_number': 'float'
    }

    attribute_map = {
        'type_code': 'typeCode',
        'weight': 'weight',
        'dimensions': 'dimensions',
        'customer_references': 'customerReferences',
        'identifiers': 'identifiers',
        'description': 'description',
        'label_barcodes': 'labelBarcodes',
        'label_text': 'labelText',
        'label_description': 'labelDescription',
        'reference_number': 'referenceNumber'
    }

    def __init__(self, type_code=None, weight=None, dimensions=None, customer_references=None, identifiers=None, description=None, label_barcodes=None, label_text=None, label_description=None, reference_number=None):  # noqa: E501
        """SupermodelIoLogisticsExpressPackage - a model defined in Swagger"""  # noqa: E501
        self._type_code = None
        self._weight = None
        self._dimensions = None
        self._customer_references = None
        self._identifiers = None
        self._description = None
        self._label_barcodes = None
        self._label_text = None
        self._label_description = None
        self._reference_number = None
        self.discriminator = None
        if type_code is not None:
            self.type_code = type_code
        self.weight = weight
        self.dimensions = dimensions
        if customer_references is not None:
            self.customer_references = customer_references
        if identifiers is not None:
            self.identifiers = identifiers
        if description is not None:
            self.description = description
        if label_barcodes is not None:
            self.label_barcodes = label_barcodes
        if label_text is not None:
            self.label_text = label_text
        if label_description is not None:
            self.label_description = label_description
        if reference_number is not None:
            self.reference_number = reference_number

    @property
    def type_code(self):
        """Gets the type_code of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        Please contact your DHL Express representative if you wish to use a DHL specific package otherwise ignore this element.  # noqa: E501

        :return: The type_code of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this SupermodelIoLogisticsExpressPackage.

        Please contact your DHL Express representative if you wish to use a DHL specific package otherwise ignore this element.  # noqa: E501

        :param type_code: The type_code of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: str
        """
        allowed_values = ["3BX", "2BC", "2BP", "CE1", "7BX", "6BX", "4BX", "2BX", "1CE", "WB1", "WB3", "XPD", "8BX", "5BX", "WB6", "TBL", "TBS", "WB2"]  # noqa: E501
        if type_code not in allowed_values:
            raise ValueError(
                "Invalid value for `type_code` ({0}), must be one of {1}"  # noqa: E501
                .format(type_code, allowed_values)
            )

        self._type_code = type_code

    @property
    def weight(self):
        """Gets the weight of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        The weight of the package.  # noqa: E501

        :return: The weight of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this SupermodelIoLogisticsExpressPackage.

        The weight of the package.  # noqa: E501

        :param weight: The weight of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: float
        """
        if weight is None:
            raise ValueError("Invalid value for `weight`, must not be `None`")  # noqa: E501

        self._weight = weight

    @property
    def dimensions(self):
        """Gets the dimensions of this SupermodelIoLogisticsExpressPackage.  # noqa: E501


        :return: The dimensions of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: Dimensions
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this SupermodelIoLogisticsExpressPackage.


        :param dimensions: The dimensions of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: Dimensions
        """
        if dimensions is None:
            raise ValueError("Invalid value for `dimensions`, must not be `None`")  # noqa: E501

        self._dimensions = dimensions

    @property
    def customer_references(self):
        """Gets the customer_references of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        Here you can declare your customer references for each package  # noqa: E501

        :return: The customer_references of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressPackageReference]
        """
        return self._customer_references

    @customer_references.setter
    def customer_references(self, customer_references):
        """Sets the customer_references of this SupermodelIoLogisticsExpressPackage.

        Here you can declare your customer references for each package  # noqa: E501

        :param customer_references: The customer_references of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressPackageReference]
        """

        self._customer_references = customer_references

    @property
    def identifiers(self):
        """Gets the identifiers of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        Identifiers section is on the package level where you can optionaly provide a DHL Express waybill number. This has to be enabled by your DHL Express IT contact.  # noqa: E501

        :return: The identifiers of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressIdentifier]
        """
        return self._identifiers

    @identifiers.setter
    def identifiers(self, identifiers):
        """Sets the identifiers of this SupermodelIoLogisticsExpressPackage.

        Identifiers section is on the package level where you can optionaly provide a DHL Express waybill number. This has to be enabled by your DHL Express IT contact.  # noqa: E501

        :param identifiers: The identifiers of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressIdentifier]
        """

        self._identifiers = identifiers

    @property
    def description(self):
        """Gets the description of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        Please enter description of content for each package  # noqa: E501

        :return: The description of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SupermodelIoLogisticsExpressPackage.

        Please enter description of content for each package  # noqa: E501

        :param description: The description of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def label_barcodes(self):
        """Gets the label_barcodes of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        This allows you to define up to two bespoke barcodes on the DHL Express Tranport label. To use this feature please set outputImageProperties/imageOptions/templateName as ECOM26_84CI_003 for typeCode=label  # noqa: E501

        :return: The label_barcodes of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressPackageLabelBarcodes]
        """
        return self._label_barcodes

    @label_barcodes.setter
    def label_barcodes(self, label_barcodes):
        """Sets the label_barcodes of this SupermodelIoLogisticsExpressPackage.

        This allows you to define up to two bespoke barcodes on the DHL Express Tranport label. To use this feature please set outputImageProperties/imageOptions/templateName as ECOM26_84CI_003 for typeCode=label  # noqa: E501

        :param label_barcodes: The label_barcodes of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressPackageLabelBarcodes]
        """

        self._label_barcodes = label_barcodes

    @property
    def label_text(self):
        """Gets the label_text of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        This allows you to enter up to two bespoke texts on the DHL Express Tranport label. To use this feature please set outputImageProperties/imageOptions/templateName as ECOM26_84CI_003 for typeCode=label  # noqa: E501

        :return: The label_text of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressPackageLabelText]
        """
        return self._label_text

    @label_text.setter
    def label_text(self, label_text):
        """Sets the label_text of this SupermodelIoLogisticsExpressPackage.

        This allows you to enter up to two bespoke texts on the DHL Express Tranport label. To use this feature please set outputImageProperties/imageOptions/templateName as ECOM26_84CI_003 for typeCode=label  # noqa: E501

        :param label_text: The label_text of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressPackageLabelText]
        """

        self._label_text = label_text

    @property
    def label_description(self):
        """Gets the label_description of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        Please enter additional customer description  # noqa: E501

        :return: The label_description of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: str
        """
        return self._label_description

    @label_description.setter
    def label_description(self, label_description):
        """Sets the label_description of this SupermodelIoLogisticsExpressPackage.

        Please enter additional customer description  # noqa: E501

        :param label_description: The label_description of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: str
        """

        self._label_description = label_description

    @property
    def reference_number(self):
        """Gets the reference_number of this SupermodelIoLogisticsExpressPackage.  # noqa: E501

        Please enter package reference number. If package reference number is provided for at least one package, then package reference number must be provided for all packages.  # noqa: E501

        :return: The reference_number of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :rtype: float
        """
        return self._reference_number

    @reference_number.setter
    def reference_number(self, reference_number):
        """Sets the reference_number of this SupermodelIoLogisticsExpressPackage.

        Please enter package reference number. If package reference number is provided for at least one package, then package reference number must be provided for all packages.  # noqa: E501

        :param reference_number: The reference_number of this SupermodelIoLogisticsExpressPackage.  # noqa: E501
        :type: float
        """

        self._reference_number = reference_number

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressPackage, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressPackage):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
