# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services    In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.7.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'number': 'str',
        '_date': 'date',
        'signature_name': 'str',
        'signature_title': 'str',
        'signature_image': 'str',
        'instructions': 'list[str]',
        'customer_data_text_entries': 'list[str]',
        'total_net_weight': 'float',
        'total_gross_weight': 'float',
        'customer_references': 'list[SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoiceCustomerReferences]',
        'terms_of_payment': 'str',
        'indicative_customs_values': 'SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoiceIndicativeCustomsValues'
    }

    attribute_map = {
        'number': 'number',
        '_date': 'date',
        'signature_name': 'signatureName',
        'signature_title': 'signatureTitle',
        'signature_image': 'signatureImage',
        'instructions': 'instructions',
        'customer_data_text_entries': 'customerDataTextEntries',
        'total_net_weight': 'totalNetWeight',
        'total_gross_weight': 'totalGrossWeight',
        'customer_references': 'customerReferences',
        'terms_of_payment': 'termsOfPayment',
        'indicative_customs_values': 'indicativeCustomsValues'
    }

    def __init__(self, number=None, _date=None, signature_name=None, signature_title=None, signature_image=None, instructions=None, customer_data_text_entries=None, total_net_weight=None, total_gross_weight=None, customer_references=None, terms_of_payment=None, indicative_customs_values=None):  # noqa: E501
        """SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice - a model defined in Swagger"""  # noqa: E501
        self._number = None
        self.__date = None
        self._signature_name = None
        self._signature_title = None
        self._signature_image = None
        self._instructions = None
        self._customer_data_text_entries = None
        self._total_net_weight = None
        self._total_gross_weight = None
        self._customer_references = None
        self._terms_of_payment = None
        self._indicative_customs_values = None
        self.discriminator = None
        self.number = number
        self._date = _date
        if signature_name is not None:
            self.signature_name = signature_name
        if signature_title is not None:
            self.signature_title = signature_title
        if signature_image is not None:
            self.signature_image = signature_image
        if instructions is not None:
            self.instructions = instructions
        if customer_data_text_entries is not None:
            self.customer_data_text_entries = customer_data_text_entries
        if total_net_weight is not None:
            self.total_net_weight = total_net_weight
        if total_gross_weight is not None:
            self.total_gross_weight = total_gross_weight
        if customer_references is not None:
            self.customer_references = customer_references
        if terms_of_payment is not None:
            self.terms_of_payment = terms_of_payment
        if indicative_customs_values is not None:
            self.indicative_customs_values = indicative_customs_values

    @property
    def number(self):
        """Gets the number of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please enter commercial invoice number  # noqa: E501

        :return: The number of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please enter commercial invoice number  # noqa: E501

        :param number: The number of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: str
        """
        if number is None:
            raise ValueError("Invalid value for `number`, must not be `None`")  # noqa: E501

        self._number = number

    @property
    def _date(self):
        """Gets the _date of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please enter commercial invoice date  # noqa: E501

        :return: The _date of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please enter commercial invoice date  # noqa: E501

        :param _date: The _date of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: date
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")  # noqa: E501

        self.__date = _date

    @property
    def signature_name(self):
        """Gets the signature_name of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please enter who has signed the invoce  # noqa: E501

        :return: The signature_name of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: str
        """
        return self._signature_name

    @signature_name.setter
    def signature_name(self, signature_name):
        """Sets the signature_name of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please enter who has signed the invoce  # noqa: E501

        :param signature_name: The signature_name of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: str
        """

        self._signature_name = signature_name

    @property
    def signature_title(self):
        """Gets the signature_title of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please provide title of person who has signed the invoice  # noqa: E501

        :return: The signature_title of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: str
        """
        return self._signature_title

    @signature_title.setter
    def signature_title(self, signature_title):
        """Sets the signature_title of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please provide title of person who has signed the invoice  # noqa: E501

        :param signature_title: The signature_title of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: str
        """

        self._signature_title = signature_title

    @property
    def signature_image(self):
        """Gets the signature_image of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please provide the signature image  # noqa: E501

        :return: The signature_image of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: str
        """
        return self._signature_image

    @signature_image.setter
    def signature_image(self, signature_image):
        """Sets the signature_image of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please provide the signature image  # noqa: E501

        :param signature_image: The signature_image of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: str
        """

        self._signature_image = signature_image

    @property
    def instructions(self):
        """Gets the instructions of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Shipment instructions for customs invoice printing purposes. Printed only when using Customs Invoice template COMMERCIAL_INVOICE_04. If using Customs Invoice template    COMMERCIAL_INVOICE_04, recommended max length is 120 characters.  # noqa: E501

        :return: The instructions of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: list[str]
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Shipment instructions for customs invoice printing purposes. Printed only when using Customs Invoice template COMMERCIAL_INVOICE_04. If using Customs Invoice template    COMMERCIAL_INVOICE_04, recommended max length is 120 characters.  # noqa: E501

        :param instructions: The instructions of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: list[str]
        """

        self._instructions = instructions

    @property
    def customer_data_text_entries(self):
        """Gets the customer_data_text_entries of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Customer data text to be printed in<BR>                  customs invoice.<BR>                  Printed only when using Customs<BR>                  Invoice template<BR>                  COMMERCIAL_INVOICE_04.  # noqa: E501

        :return: The customer_data_text_entries of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: list[str]
        """
        return self._customer_data_text_entries

    @customer_data_text_entries.setter
    def customer_data_text_entries(self, customer_data_text_entries):
        """Sets the customer_data_text_entries of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Customer data text to be printed in<BR>                  customs invoice.<BR>                  Printed only when using Customs<BR>                  Invoice template<BR>                  COMMERCIAL_INVOICE_04.  # noqa: E501

        :param customer_data_text_entries: The customer_data_text_entries of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: list[str]
        """

        self._customer_data_text_entries = customer_data_text_entries

    @property
    def total_net_weight(self):
        """Gets the total_net_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please provide the total net weight  # noqa: E501

        :return: The total_net_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: float
        """
        return self._total_net_weight

    @total_net_weight.setter
    def total_net_weight(self, total_net_weight):
        """Sets the total_net_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please provide the total net weight  # noqa: E501

        :param total_net_weight: The total_net_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: float
        """

        self._total_net_weight = total_net_weight

    @property
    def total_gross_weight(self):
        """Gets the total_gross_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please provide the total gross weight  # noqa: E501

        :return: The total_gross_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: float
        """
        return self._total_gross_weight

    @total_gross_weight.setter
    def total_gross_weight(self, total_gross_weight):
        """Sets the total_gross_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please provide the total gross weight  # noqa: E501

        :param total_gross_weight: The total_gross_weight of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: float
        """

        self._total_gross_weight = total_gross_weight

    @property
    def customer_references(self):
        """Gets the customer_references of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please provide the customer references at invoice level. It is recommended to provide less than 20 customer references of 'MRN' type code.  # noqa: E501

        :return: The customer_references of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoiceCustomerReferences]
        """
        return self._customer_references

    @customer_references.setter
    def customer_references(self, customer_references):
        """Sets the customer_references of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please provide the customer references at invoice level. It is recommended to provide less than 20 customer references of 'MRN' type code.  # noqa: E501

        :param customer_references: The customer_references of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoiceCustomerReferences]
        """

        self._customer_references = customer_references

    @property
    def terms_of_payment(self):
        """Gets the terms_of_payment of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501

        Please provide the terms of payment  # noqa: E501

        :return: The terms_of_payment of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: str
        """
        return self._terms_of_payment

    @terms_of_payment.setter
    def terms_of_payment(self, terms_of_payment):
        """Sets the terms_of_payment of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.

        Please provide the terms of payment  # noqa: E501

        :param terms_of_payment: The terms_of_payment of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: str
        """

        self._terms_of_payment = terms_of_payment

    @property
    def indicative_customs_values(self):
        """Gets the indicative_customs_values of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501


        :return: The indicative_customs_values of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :rtype: SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoiceIndicativeCustomsValues
        """
        return self._indicative_customs_values

    @indicative_customs_values.setter
    def indicative_customs_values(self, indicative_customs_values):
        """Sets the indicative_customs_values of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.


        :param indicative_customs_values: The indicative_customs_values of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice.  # noqa: E501
        :type: SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoiceIndicativeCustomsValues
        """

        self._indicative_customs_values = indicative_customs_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoice):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
