# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressImageUploadRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'original_planned_shipping_date': 'str',
        'accounts': 'list[SupermodelIoLogisticsExpressAccount]',
        'product_code': 'str',
        'document_images': 'SupermodelIoLogisticsExpressDocumentImages'
    }

    attribute_map = {
        'original_planned_shipping_date': 'originalPlannedShippingDate',
        'accounts': 'accounts',
        'product_code': 'productCode',
        'document_images': 'documentImages'
    }

    def __init__(self, original_planned_shipping_date=None, accounts=None, product_code=None, document_images=None):  # noqa: E501
        """SupermodelIoLogisticsExpressImageUploadRequest - a model defined in Swagger"""  # noqa: E501
        self._original_planned_shipping_date = None
        self._accounts = None
        self._product_code = None
        self._document_images = None
        self.discriminator = None
        self.original_planned_shipping_date = original_planned_shipping_date
        self.accounts = accounts
        self.product_code = product_code
        self.document_images = document_images

    @property
    def original_planned_shipping_date(self):
        """Gets the original_planned_shipping_date of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501


        :return: The original_planned_shipping_date of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :rtype: str
        """
        return self._original_planned_shipping_date

    @original_planned_shipping_date.setter
    def original_planned_shipping_date(self, original_planned_shipping_date):
        """Sets the original_planned_shipping_date of this SupermodelIoLogisticsExpressImageUploadRequest.


        :param original_planned_shipping_date: The original_planned_shipping_date of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :type: str
        """
        if original_planned_shipping_date is None:
            raise ValueError("Invalid value for `original_planned_shipping_date`, must not be `None`")  # noqa: E501

        self._original_planned_shipping_date = original_planned_shipping_date

    @property
    def accounts(self):
        """Gets the accounts of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501

        Please enter all the DHL Express accounts and types to be used for this shipment  # noqa: E501

        :return: The accounts of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressAccount]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this SupermodelIoLogisticsExpressImageUploadRequest.

        Please enter all the DHL Express accounts and types to be used for this shipment  # noqa: E501

        :param accounts: The accounts of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressAccount]
        """
        if accounts is None:
            raise ValueError("Invalid value for `accounts`, must not be `None`")  # noqa: E501

        self._accounts = accounts

    @property
    def product_code(self):
        """Gets the product_code of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501

        Please enter DHL Express Global Product code  # noqa: E501

        :return: The product_code of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this SupermodelIoLogisticsExpressImageUploadRequest.

        Please enter DHL Express Global Product code  # noqa: E501

        :param product_code: The product_code of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :type: str
        """
        if product_code is None:
            raise ValueError("Invalid value for `product_code`, must not be `None`")  # noqa: E501

        self._product_code = product_code

    @property
    def document_images(self):
        """Gets the document_images of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501


        :return: The document_images of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :rtype: SupermodelIoLogisticsExpressDocumentImages
        """
        return self._document_images

    @document_images.setter
    def document_images(self, document_images):
        """Sets the document_images of this SupermodelIoLogisticsExpressImageUploadRequest.


        :param document_images: The document_images of this SupermodelIoLogisticsExpressImageUploadRequest.  # noqa: E501
        :type: SupermodelIoLogisticsExpressDocumentImages
        """
        if document_images is None:
            raise ValueError("Invalid value for `document_images`, must not be `None`")  # noqa: E501

        self._document_images = document_images

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressImageUploadRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressImageUploadRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
