# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'pre_calculated_total_goods_value': 'float',
        'pre_calculated_total_invoice_value': 'float'
    }

    attribute_map = {
        'pre_calculated_total_goods_value': 'preCalculatedTotalGoodsValue',
        'pre_calculated_total_invoice_value': 'preCalculatedTotalInvoiceValue'
    }

    def __init__(self, pre_calculated_total_goods_value=None, pre_calculated_total_invoice_value=None):  # noqa: E501
        """SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues - a model defined in Swagger"""  # noqa: E501
        self._pre_calculated_total_goods_value = None
        self._pre_calculated_total_invoice_value = None
        self.discriminator = None
        self.pre_calculated_total_goods_value = pre_calculated_total_goods_value
        self.pre_calculated_total_invoice_value = pre_calculated_total_invoice_value

    @property
    def pre_calculated_total_goods_value(self):
        """Gets the pre_calculated_total_goods_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.  # noqa: E501

        Please provide the pre-calculated total value of all line items. preCalculatedTotalGoodsValue indicates pre-calculated sum of all Export Line Items’ Subtotal in Export Declaration. This field value will be rendered in Commercial Invoice output and manifest message.  # noqa: E501

        :return: The pre_calculated_total_goods_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.  # noqa: E501
        :rtype: float
        """
        return self._pre_calculated_total_goods_value

    @pre_calculated_total_goods_value.setter
    def pre_calculated_total_goods_value(self, pre_calculated_total_goods_value):
        """Sets the pre_calculated_total_goods_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.

        Please provide the pre-calculated total value of all line items. preCalculatedTotalGoodsValue indicates pre-calculated sum of all Export Line Items’ Subtotal in Export Declaration. This field value will be rendered in Commercial Invoice output and manifest message.  # noqa: E501

        :param pre_calculated_total_goods_value: The pre_calculated_total_goods_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.  # noqa: E501
        :type: float
        """
        if pre_calculated_total_goods_value is None:
            raise ValueError("Invalid value for `pre_calculated_total_goods_value`, must not be `None`")  # noqa: E501

        self._pre_calculated_total_goods_value = pre_calculated_total_goods_value

    @property
    def pre_calculated_total_invoice_value(self):
        """Gets the pre_calculated_total_invoice_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.  # noqa: E501

        Please provide the total value of all line items plus additional charges if any. preCalculatedTotalInvoiceValue indicates pre-calculated sum of all Export Line Items’ Subtotal  amount plus all Other Charges amount.  This field value will be used in rendered Commercial Invoice output, Waybill document and manifest message.  # noqa: E501

        :return: The pre_calculated_total_invoice_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.  # noqa: E501
        :rtype: float
        """
        return self._pre_calculated_total_invoice_value

    @pre_calculated_total_invoice_value.setter
    def pre_calculated_total_invoice_value(self, pre_calculated_total_invoice_value):
        """Sets the pre_calculated_total_invoice_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.

        Please provide the total value of all line items plus additional charges if any. preCalculatedTotalInvoiceValue indicates pre-calculated sum of all Export Line Items’ Subtotal  amount plus all Other Charges amount.  This field value will be used in rendered Commercial Invoice output, Waybill document and manifest message.  # noqa: E501

        :param pre_calculated_total_invoice_value: The pre_calculated_total_invoice_value of this SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues.  # noqa: E501
        :type: float
        """
        if pre_calculated_total_invoice_value is None:
            raise ValueError("Invalid value for `pre_calculated_total_invoice_value`, must not be `None`")  # noqa: E501

        self._pre_calculated_total_invoice_value = pre_calculated_total_invoice_value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressCreateShipmentRequestContentExportDeclarationInvoicePreCalculatedTotalValues):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
