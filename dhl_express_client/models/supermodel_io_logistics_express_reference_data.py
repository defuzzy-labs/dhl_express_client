# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressReferenceData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dataset_name': 'str',
        'data_set_captions': 'str',
        'data': 'list[list[object]]'
    }

    attribute_map = {
        'dataset_name': 'datasetName',
        'data_set_captions': 'dataSetCaptions',
        'data': 'data'
    }

    def __init__(self, dataset_name=None, data_set_captions=None, data=None):  # noqa: E501
        """SupermodelIoLogisticsExpressReferenceData - a model defined in Swagger"""  # noqa: E501
        self._dataset_name = None
        self._data_set_captions = None
        self._data = None
        self.discriminator = None
        self.dataset_name = dataset_name
        if data_set_captions is not None:
            self.data_set_captions = data_set_captions
        if data is not None:
            self.data = data

    @property
    def dataset_name(self):
        """Gets the dataset_name of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501

        The reference data dataset name  # noqa: E501

        :return: The dataset_name of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501
        :rtype: str
        """
        return self._dataset_name

    @dataset_name.setter
    def dataset_name(self, dataset_name):
        """Sets the dataset_name of this SupermodelIoLogisticsExpressReferenceData.

        The reference data dataset name  # noqa: E501

        :param dataset_name: The dataset_name of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501
        :type: str
        """
        if dataset_name is None:
            raise ValueError("Invalid value for `dataset_name`, must not be `None`")  # noqa: E501

        self._dataset_name = dataset_name

    @property
    def data_set_captions(self):
        """Gets the data_set_captions of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501


        :return: The data_set_captions of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501
        :rtype: str
        """
        return self._data_set_captions

    @data_set_captions.setter
    def data_set_captions(self, data_set_captions):
        """Sets the data_set_captions of this SupermodelIoLogisticsExpressReferenceData.


        :param data_set_captions: The data_set_captions of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501
        :type: str
        """

        self._data_set_captions = data_set_captions

    @property
    def data(self):
        """Gets the data of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501


        :return: The data of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501
        :rtype: list[list[object]]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this SupermodelIoLogisticsExpressReferenceData.


        :param data: The data of this SupermodelIoLogisticsExpressReferenceData.  # noqa: E501
        :type: list[list[object]]
        """

        self._data = data

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressReferenceData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressReferenceData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
