# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressCreateShipmentResponseDocuments(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'image_format': 'str',
        'content': 'str',
        'type_code': 'str'
    }

    attribute_map = {
        'image_format': 'imageFormat',
        'content': 'content',
        'type_code': 'typeCode'
    }

    def __init__(self, image_format=None, content=None, type_code=None):  # noqa: E501
        """SupermodelIoLogisticsExpressCreateShipmentResponseDocuments - a model defined in Swagger"""  # noqa: E501
        self._image_format = None
        self._content = None
        self._type_code = None
        self.discriminator = None
        self.image_format = image_format
        self.content = content
        self.type_code = type_code

    @property
    def image_format(self):
        """Gets the image_format of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501

        Identifies image format the document is created in, like PNG etc.  # noqa: E501

        :return: The image_format of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501
        :rtype: str
        """
        return self._image_format

    @image_format.setter
    def image_format(self, image_format):
        """Sets the image_format of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.

        Identifies image format the document is created in, like PNG etc.  # noqa: E501

        :param image_format: The image_format of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501
        :type: str
        """
        if image_format is None:
            raise ValueError("Invalid value for `image_format`, must not be `None`")  # noqa: E501

        self._image_format = image_format

    @property
    def content(self):
        """Gets the content of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501

        Contains base64 encoded document image  # noqa: E501

        :return: The content of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.

        Contains base64 encoded document image  # noqa: E501

        :param content: The content of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501
        :type: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    @property
    def type_code(self):
        """Gets the type_code of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501

        Identifie type of the QR code  # noqa: E501

        :return: The type_code of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.

        Identifie type of the QR code  # noqa: E501

        :param type_code: The type_code of this SupermodelIoLogisticsExpressCreateShipmentResponseDocuments.  # noqa: E501
        :type: str
        """
        if type_code is None:
            raise ValueError("Invalid value for `type_code`, must not be `None`")  # noqa: E501

        self._type_code = type_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressCreateShipmentResponseDocuments, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressCreateShipmentResponseDocuments):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
