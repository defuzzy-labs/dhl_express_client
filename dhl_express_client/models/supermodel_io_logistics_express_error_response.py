# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressErrorResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'instance': 'str',
        'detail': 'str',
        'title': 'str',
        'message': 'str',
        'additional_details': 'list[str]',
        'status': 'str'
    }

    attribute_map = {
        'instance': 'instance',
        'detail': 'detail',
        'title': 'title',
        'message': 'message',
        'additional_details': 'additionalDetails',
        'status': 'status'
    }

    def __init__(self, instance=None, detail=None, title=None, message=None, additional_details=None, status=None):  # noqa: E501
        """SupermodelIoLogisticsExpressErrorResponse - a model defined in Swagger"""  # noqa: E501
        self._instance = None
        self._detail = None
        self._title = None
        self._message = None
        self._additional_details = None
        self._status = None
        self.discriminator = None
        if instance is not None:
            self.instance = instance
        if detail is not None:
            self.detail = detail
        if title is not None:
            self.title = title
        if message is not None:
            self.message = message
        if additional_details is not None:
            self.additional_details = additional_details
        if status is not None:
            self.status = status

    @property
    def instance(self):
        """Gets the instance of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501


        :return: The instance of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :rtype: str
        """
        return self._instance

    @instance.setter
    def instance(self, instance):
        """Sets the instance of this SupermodelIoLogisticsExpressErrorResponse.


        :param instance: The instance of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :type: str
        """

        self._instance = instance

    @property
    def detail(self):
        """Gets the detail of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501


        :return: The detail of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this SupermodelIoLogisticsExpressErrorResponse.


        :param detail: The detail of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :type: str
        """

        self._detail = detail

    @property
    def title(self):
        """Gets the title of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501


        :return: The title of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SupermodelIoLogisticsExpressErrorResponse.


        :param title: The title of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def message(self):
        """Gets the message of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501


        :return: The message of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SupermodelIoLogisticsExpressErrorResponse.


        :param message: The message of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def additional_details(self):
        """Gets the additional_details of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501


        :return: The additional_details of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._additional_details

    @additional_details.setter
    def additional_details(self, additional_details):
        """Sets the additional_details of this SupermodelIoLogisticsExpressErrorResponse.


        :param additional_details: The additional_details of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :type: list[str]
        """

        self._additional_details = additional_details

    @property
    def status(self):
        """Gets the status of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501


        :return: The status of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SupermodelIoLogisticsExpressErrorResponse.


        :param status: The status of this SupermodelIoLogisticsExpressErrorResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressErrorResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressErrorResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
