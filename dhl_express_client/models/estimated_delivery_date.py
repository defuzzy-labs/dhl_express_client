# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EstimatedDeliveryDate(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'is_requested': 'bool',
        'type_code': 'str'
    }

    attribute_map = {
        'is_requested': 'isRequested',
        'type_code': 'typeCode'
    }

    def __init__(self, is_requested=False, type_code=None):  # noqa: E501
        """EstimatedDeliveryDate - a model defined in Swagger"""  # noqa: E501
        self._is_requested = None
        self._type_code = None
        self.discriminator = None
        self.is_requested = is_requested
        if type_code is not None:
            self.type_code = type_code

    @property
    def is_requested(self):
        """Gets the is_requested of this EstimatedDeliveryDate.  # noqa: E501

        Please indicate if requesting to get EDD for this shipment.  Estimated Delivery Date Type. QDDF: is the fastest transit time as quoted to the customer at booking or shipment creation. When clearance or any other non-transport operational component is expected to impact transit time, QDDF does not constitute DHL's service commitment. QDDC: cconstitutes DHL's service commitment as quoted at booking or shipment creation. QDDC builds in clearance time, and potentially other special operational non-transport component(s), when relevant.  # noqa: E501

        :return: The is_requested of this EstimatedDeliveryDate.  # noqa: E501
        :rtype: bool
        """
        return self._is_requested

    @is_requested.setter
    def is_requested(self, is_requested):
        """Sets the is_requested of this EstimatedDeliveryDate.

        Please indicate if requesting to get EDD for this shipment.  Estimated Delivery Date Type. QDDF: is the fastest transit time as quoted to the customer at booking or shipment creation. When clearance or any other non-transport operational component is expected to impact transit time, QDDF does not constitute DHL's service commitment. QDDC: cconstitutes DHL's service commitment as quoted at booking or shipment creation. QDDC builds in clearance time, and potentially other special operational non-transport component(s), when relevant.  # noqa: E501

        :param is_requested: The is_requested of this EstimatedDeliveryDate.  # noqa: E501
        :type: bool
        """
        if is_requested is None:
            raise ValueError("Invalid value for `is_requested`, must not be `None`")  # noqa: E501

        self._is_requested = is_requested

    @property
    def type_code(self):
        """Gets the type_code of this EstimatedDeliveryDate.  # noqa: E501

        Please indicate the EDD type being requested  # noqa: E501

        :return: The type_code of this EstimatedDeliveryDate.  # noqa: E501
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this EstimatedDeliveryDate.

        Please indicate the EDD type being requested  # noqa: E501

        :param type_code: The type_code of this EstimatedDeliveryDate.  # noqa: E501
        :type: str
        """
        allowed_values = ["QDDC", "QDDF"]  # noqa: E501
        if type_code not in allowed_values:
            raise ValueError(
                "Invalid value for `type_code` ({0}), must be one of {1}"  # noqa: E501
                .format(type_code, allowed_values)
            )

        self._type_code = type_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EstimatedDeliveryDate, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EstimatedDeliveryDate):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
