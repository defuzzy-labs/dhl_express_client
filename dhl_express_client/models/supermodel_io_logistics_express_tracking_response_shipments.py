# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)   # noqa: E501

    OpenAPI spec version: 2.12.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupermodelIoLogisticsExpressTrackingResponseShipments(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'shipment_tracking_number': 'str',
        'status': 'str',
        'shipment_timestamp': 'str',
        'product_code': 'str',
        'description': 'str',
        'shipper_details': 'SupermodelIoLogisticsExpressTrackingResponseShipperDetails',
        'receiver_details': 'SupermodelIoLogisticsExpressTrackingResponseReceiverDetails',
        'total_weight': 'float',
        'unit_of_measurements': 'str',
        'shipper_references': 'list[SupermodelIoLogisticsExpressReference]',
        'events': 'list[SupermodelIoLogisticsExpressTrackingResponseEvents]',
        'number_of_pieces': 'float',
        'pieces': 'list[SupermodelIoLogisticsExpressTrackingResponsePieces]',
        'estimated_delivery_date': 'str',
        'children_shipment_identification_numbers': 'list[str]',
        'controlled_access_data_codes': 'list[str]'
    }

    attribute_map = {
        'shipment_tracking_number': 'shipmentTrackingNumber',
        'status': 'status',
        'shipment_timestamp': 'shipmentTimestamp',
        'product_code': 'productCode',
        'description': 'description',
        'shipper_details': 'shipperDetails',
        'receiver_details': 'receiverDetails',
        'total_weight': 'totalWeight',
        'unit_of_measurements': 'unitOfMeasurements',
        'shipper_references': 'shipperReferences',
        'events': 'events',
        'number_of_pieces': 'numberOfPieces',
        'pieces': 'pieces',
        'estimated_delivery_date': 'estimatedDeliveryDate',
        'children_shipment_identification_numbers': 'childrenShipmentIdentificationNumbers',
        'controlled_access_data_codes': 'controlledAccessDataCodes'
    }

    def __init__(self, shipment_tracking_number=None, status=None, shipment_timestamp=None, product_code=None, description=None, shipper_details=None, receiver_details=None, total_weight=None, unit_of_measurements=None, shipper_references=None, events=None, number_of_pieces=None, pieces=None, estimated_delivery_date=None, children_shipment_identification_numbers=None, controlled_access_data_codes=None):  # noqa: E501
        """SupermodelIoLogisticsExpressTrackingResponseShipments - a model defined in Swagger"""  # noqa: E501
        self._shipment_tracking_number = None
        self._status = None
        self._shipment_timestamp = None
        self._product_code = None
        self._description = None
        self._shipper_details = None
        self._receiver_details = None
        self._total_weight = None
        self._unit_of_measurements = None
        self._shipper_references = None
        self._events = None
        self._number_of_pieces = None
        self._pieces = None
        self._estimated_delivery_date = None
        self._children_shipment_identification_numbers = None
        self._controlled_access_data_codes = None
        self.discriminator = None
        if shipment_tracking_number is not None:
            self.shipment_tracking_number = shipment_tracking_number
        if status is not None:
            self.status = status
        if shipment_timestamp is not None:
            self.shipment_timestamp = shipment_timestamp
        if product_code is not None:
            self.product_code = product_code
        if description is not None:
            self.description = description
        if shipper_details is not None:
            self.shipper_details = shipper_details
        if receiver_details is not None:
            self.receiver_details = receiver_details
        if total_weight is not None:
            self.total_weight = total_weight
        if unit_of_measurements is not None:
            self.unit_of_measurements = unit_of_measurements
        if shipper_references is not None:
            self.shipper_references = shipper_references
        self.events = events
        if number_of_pieces is not None:
            self.number_of_pieces = number_of_pieces
        if pieces is not None:
            self.pieces = pieces
        if estimated_delivery_date is not None:
            self.estimated_delivery_date = estimated_delivery_date
        if children_shipment_identification_numbers is not None:
            self.children_shipment_identification_numbers = children_shipment_identification_numbers
        if controlled_access_data_codes is not None:
            self.controlled_access_data_codes = controlled_access_data_codes

    @property
    def shipment_tracking_number(self):
        """Gets the shipment_tracking_number of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The shipment_tracking_number of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: str
        """
        return self._shipment_tracking_number

    @shipment_tracking_number.setter
    def shipment_tracking_number(self, shipment_tracking_number):
        """Sets the shipment_tracking_number of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param shipment_tracking_number: The shipment_tracking_number of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: str
        """

        self._shipment_tracking_number = shipment_tracking_number

    @property
    def status(self):
        """Gets the status of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The status of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param status: The status of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def shipment_timestamp(self):
        """Gets the shipment_timestamp of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The shipment_timestamp of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: str
        """
        return self._shipment_timestamp

    @shipment_timestamp.setter
    def shipment_timestamp(self, shipment_timestamp):
        """Sets the shipment_timestamp of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param shipment_timestamp: The shipment_timestamp of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: str
        """

        self._shipment_timestamp = shipment_timestamp

    @property
    def product_code(self):
        """Gets the product_code of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501

        DHL product code  # noqa: E501

        :return: The product_code of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this SupermodelIoLogisticsExpressTrackingResponseShipments.

        DHL product code  # noqa: E501

        :param product_code: The product_code of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: str
        """

        self._product_code = product_code

    @property
    def description(self):
        """Gets the description of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The description of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param description: The description of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def shipper_details(self):
        """Gets the shipper_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The shipper_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: SupermodelIoLogisticsExpressTrackingResponseShipperDetails
        """
        return self._shipper_details

    @shipper_details.setter
    def shipper_details(self, shipper_details):
        """Sets the shipper_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param shipper_details: The shipper_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: SupermodelIoLogisticsExpressTrackingResponseShipperDetails
        """

        self._shipper_details = shipper_details

    @property
    def receiver_details(self):
        """Gets the receiver_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The receiver_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: SupermodelIoLogisticsExpressTrackingResponseReceiverDetails
        """
        return self._receiver_details

    @receiver_details.setter
    def receiver_details(self, receiver_details):
        """Sets the receiver_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param receiver_details: The receiver_details of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: SupermodelIoLogisticsExpressTrackingResponseReceiverDetails
        """

        self._receiver_details = receiver_details

    @property
    def total_weight(self):
        """Gets the total_weight of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The total_weight of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: float
        """
        return self._total_weight

    @total_weight.setter
    def total_weight(self, total_weight):
        """Sets the total_weight of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param total_weight: The total_weight of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: float
        """

        self._total_weight = total_weight

    @property
    def unit_of_measurements(self):
        """Gets the unit_of_measurements of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The unit_of_measurements of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: str
        """
        return self._unit_of_measurements

    @unit_of_measurements.setter
    def unit_of_measurements(self, unit_of_measurements):
        """Sets the unit_of_measurements of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param unit_of_measurements: The unit_of_measurements of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: str
        """

        self._unit_of_measurements = unit_of_measurements

    @property
    def shipper_references(self):
        """Gets the shipper_references of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The shipper_references of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressReference]
        """
        return self._shipper_references

    @shipper_references.setter
    def shipper_references(self, shipper_references):
        """Sets the shipper_references of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param shipper_references: The shipper_references of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressReference]
        """

        self._shipper_references = shipper_references

    @property
    def events(self):
        """Gets the events of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The events of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressTrackingResponseEvents]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param events: The events of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressTrackingResponseEvents]
        """
        if events is None:
            raise ValueError("Invalid value for `events`, must not be `None`")  # noqa: E501

        self._events = events

    @property
    def number_of_pieces(self):
        """Gets the number_of_pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The number_of_pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: float
        """
        return self._number_of_pieces

    @number_of_pieces.setter
    def number_of_pieces(self, number_of_pieces):
        """Sets the number_of_pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param number_of_pieces: The number_of_pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: float
        """

        self._number_of_pieces = number_of_pieces

    @property
    def pieces(self):
        """Gets the pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: list[SupermodelIoLogisticsExpressTrackingResponsePieces]
        """
        return self._pieces

    @pieces.setter
    def pieces(self, pieces):
        """Sets the pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param pieces: The pieces of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: list[SupermodelIoLogisticsExpressTrackingResponsePieces]
        """

        self._pieces = pieces

    @property
    def estimated_delivery_date(self):
        """Gets the estimated_delivery_date of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The estimated_delivery_date of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: str
        """
        return self._estimated_delivery_date

    @estimated_delivery_date.setter
    def estimated_delivery_date(self, estimated_delivery_date):
        """Sets the estimated_delivery_date of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param estimated_delivery_date: The estimated_delivery_date of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: str
        """

        self._estimated_delivery_date = estimated_delivery_date

    @property
    def children_shipment_identification_numbers(self):
        """Gets the children_shipment_identification_numbers of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501


        :return: The children_shipment_identification_numbers of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: list[str]
        """
        return self._children_shipment_identification_numbers

    @children_shipment_identification_numbers.setter
    def children_shipment_identification_numbers(self, children_shipment_identification_numbers):
        """Sets the children_shipment_identification_numbers of this SupermodelIoLogisticsExpressTrackingResponseShipments.


        :param children_shipment_identification_numbers: The children_shipment_identification_numbers of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: list[str]
        """

        self._children_shipment_identification_numbers = children_shipment_identification_numbers

    @property
    def controlled_access_data_codes(self):
        """Gets the controlled_access_data_codes of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501

        controlled access data codes such as 'SHPR_CTY' for shipper's city, 'CNSGN_CTY' for consignee's city, 'SVP_URL' for service point URL, 'SVP_FAC' for service point facility code and 'SIGN_NM' for signatory name.  # noqa: E501

        :return: The controlled_access_data_codes of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :rtype: list[str]
        """
        return self._controlled_access_data_codes

    @controlled_access_data_codes.setter
    def controlled_access_data_codes(self, controlled_access_data_codes):
        """Sets the controlled_access_data_codes of this SupermodelIoLogisticsExpressTrackingResponseShipments.

        controlled access data codes such as 'SHPR_CTY' for shipper's city, 'CNSGN_CTY' for consignee's city, 'SVP_URL' for service point URL, 'SVP_FAC' for service point facility code and 'SIGN_NM' for signatory name.  # noqa: E501

        :param controlled_access_data_codes: The controlled_access_data_codes of this SupermodelIoLogisticsExpressTrackingResponseShipments.  # noqa: E501
        :type: list[str]
        """

        self._controlled_access_data_codes = controlled_access_data_codes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupermodelIoLogisticsExpressTrackingResponseShipments, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupermodelIoLogisticsExpressTrackingResponseShipments):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
